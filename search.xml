<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试标签和分类</title>
      <link href="/2022/04/30/First/"/>
      <url>/2022/04/30/First/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用type类型来测试分类与标签</p><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h6 id="1、版本控制："><a href="#1、版本控制：" class="headerlink" title="1、版本控制："></a>1、版本控制：</h6><p>意思：版本迭代</p><p>版本开发，多人开发，就需要使用版本控制器：Git、SVN、CVS、VSS、TFS、Visual Studio Online</p><p>①、本地版本控制  本地</p><p>②、集中式版本控制  <strong>SVN</strong></p><p>③、分布式版本控制  <strong>Git</strong></p><h6 id="2、Git与SVN区别"><a href="#2、Git与SVN区别" class="headerlink" title="2、Git与SVN区别"></a>2、Git与SVN区别</h6><pre><code>     SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高；    Git是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上，协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到我们更新了那些代码和文件。</code></pre><p><strong>Git是目前世界上最先进的分布式版本控制系统。</strong> </p><h6 id="3、命令-Linux的命令"><a href="#3、命令-Linux的命令" class="headerlink" title="3、命令  Linux的命令"></a>3、命令  Linux的命令</h6><p>cd……    进入……</p><p>cd..    回退到上一个目录</p><p>pwd    显示当前目录</p><p>clear    清空</p><p>ls       列出目录中的文件</p><p>touch……    新建一个…… </p><p>rm……    删除一个……</p><p>mkdir……    新建一个……文件夹    </p><p>rm-r……    删除一个……文件</p><p>mv … …   将前者移动到后者</p><p>reset    重新设置（不怎么用）</p><p>history    使用的历史</p><p>help    帮助</p><p>exit    退出</p><p>注释 是 #</p><h6 id="4、Git配置"><a href="#4、Git配置" class="headerlink" title="4、Git配置"></a>4、Git配置</h6><p>​        所有的配置文件都保存在本地</p><p>git config -1    查看配置</p><p>git config –global –list   查看用户密码</p><p>(必须要配置的)</p><p>git config –global user.name “…”  设置配置的命名</p><p>git config –global user.email “…”  设置配置的邮箱</p><h6 id="5、理论（核心）"><a href="#5、理论（核心）" class="headerlink" title="5、理论（核心）"></a>5、理论（核心）</h6><p>环境变量，只是为了全局使用罢了。</p><p><img src="C:\Users\123\AppData\Roaming\Typora\typora-user-images\1645936041395.png" alt="1645936041395"></p><p><img src="C:\Users\123\AppData\Roaming\Typora\typora-user-images\1645936093884.png" alt="1645936093884"></p><p>本地仓库搭建：</p><p>git init  ：</p><p>克隆远程仓库：</p><p>git clone [url] htps://gitee.com/kuangstudy/openclass.git</p><h6 id="6、git文件操作"><a href="#6、git文件操作" class="headerlink" title="6、git文件操作"></a>6、git文件操作</h6><p>就例如工作中，要上传自己的工作成果</p><p>步骤：</p><p>git add.</p><p>git status</p><p>git commit -m        </p><p>还有一些忽略的文件需要使用一个文件进行忽略。</p><h6 id="7、码云（作为未来找工作的重要信息）认真做"><a href="#7、码云（作为未来找工作的重要信息）认真做" class="headerlink" title="7、码云（作为未来找工作的重要信息）认真做"></a>7、码云（作为未来找工作的重要信息）认真做</h6><p>国外：github</p><p>国内：gitee</p><p>设置本机绑定SSH公钥，实现免密码登录（！！！！）</p><p><img src="C:\Users\123\AppData\Roaming\Typora\typora-user-images\1645938001115.png" alt="1645938001115"></p><p>即可创建了，，，，，，</p><p>使用码云新建仓库：就可以了</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/04/30/index/"/>
      <url>/2022/04/30/index/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于博客搬迁的原因，该博客的笔记内容会在后续都更新上传</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
